#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# YML Author: Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
# Origin:     https://github.com/l3uddz/plex_patrol
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS ######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'pgpatrol'
        extport: '0'

    - name: Server ID
      shell: 'cat /var/plexguide/pg.serverid'
      register: serverid

    - name: Token Recall
      shell: 'cat /var/plexguide/plex.token'
      register: plextoken

    - name: Recall User
      shell: 'cat /var/plexguide/plex.user'
      register: user

    - name: Register IP
      shell: 'cat /var/plexguide/server.ip'
      register: ipaddress

    - name: Multiple IPs Info
      shell: 'cat /var/plexguide/pgpatrol/multiple.ips'
      register: multipleips

    - name: Kick Video Transcodes
      shell: 'cat /var/plexguide/pgpatrol/video.transcodes'
      register: videotranscodes
      
    - name: Kick 4k Transcodes
      shell: 'cat /var/plexguide/pgpatrol/video.transcodes4k'
      register: video4k

    - name: Kick Audio Transcodes
      shell: 'cat /var/plexguide/pgpatrol/audio.transcodes'
      register: audiotranscodes

    - name: check interval
      shell: 'cat /var/plexguide/pgpatrol/check.interval'
      register: checkinterval

    - name: Paused Info
      shell: 'cat /var/plexguide/pgpatrol/kick.minutes'
      register: kickminutes

    - name: Install pip requirements
      pip:
        requirements: /opt/pgpatrol/requirements.txt
        executable: pip2

    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'

    - name: Create Basic Directories
      file: 'path={{item}} state=directory mode=0775 owner=1000 group=1000'
      with_items:
        - '/opt/appdata/pgpatrol/'

    - name: Transfer Files
      copy:
        src: '/opt/pgpatrol'
        dest: '/opt/appdata'
        owner: '1000'
        group: '1000'
        mode: a+x
        force: yes

    - name: Import default config
      template:
        src: '/opt/pgpatrol/settings.ini.default'
        dest: '/opt/appdata/pgpatrol/settings.ini'
        owner: '1000'
        group: '1000'
        mode: 0775
        force: yes

      #when: not config.stat.exists
    - name: Check Service's Existance
      stat:
        path: '/etc/systemd/system/pgpatrol.service'
      register: pgp

    - name: Stop service
      service:
        name: pgpatrol
        state: stopped
      when: pgp.stat.exists

    - name: PTS-Patrol Service
      template:
        src: /opt/appdata/pgpatrol/system/pgpatrol.service.j2
        dest: /etc/systemd/system/pgpatrol.service
        force: yes

    - name: Daemon-Reload
      systemd: state=stopped name=pgpatrol daemon_reload=yes enabled=no

    - name: Start PTS-Patrol
      systemd: state=started name=pgpatrol enabled=yes
